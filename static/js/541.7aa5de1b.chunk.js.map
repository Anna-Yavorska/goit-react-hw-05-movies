{"version":3,"file":"static/js/541.7aa5de1b.chunk.js","mappings":"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","sources":["api.js","components/Cast/Cast.js"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst KEY = '472a7d35f0d46df70840d9ca53a79985';\n\nexport const getTrendingMovies = async () => {\n  const responce = await axios.get(\n    `trending/movie/day?language=en-US&api_key=${KEY}`\n  );\n  return responce.data;\n};\n\nexport const findMoviesByInput = async input => {\n  const response = await axios.get(\n    `search/movie?query=${input}&include_adult=false&language=en-US&page=1&api_key=${KEY}`\n  );\n  return response.data.results;\n};\n\nexport const getMoviesDetails = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}?language=en-US&api_key=${KEY}`\n  );\n  return response.data;\n};\n\nexport const getMovieCast = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/credits?language=en-US&api_key=${KEY}`\n  );\n  return response.data.cast;\n};\n\nexport const getMovieReviews = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?language=en-US&api_key=${KEY}}`\n  );\n  return response.data.results;\n};\n","import { getMovieCast } from \"api\";\nimport { Loader } from \"components/Loader\";\nimport { useEffect, useState } from \"react\";\nimport toast from \"react-hot-toast\";\nimport { useParams } from 'react-router-dom';\n\nexport default function Cast() {\n    const [cast, setCast] = useState(null);\n    const [error, setError] = useState(false);\n    const [isLoading, setIsLoading] = useState(false);\n\n    const { movieId } = useParams();\n    useEffect(() => {\n        if (!movieId) return;\n        const searchCast = async () => {\n        try {\n          setIsLoading(true);\n          setError(false);\n            const data = await getMovieCast(movieId);\n            console.log(data);\n          setCast(data);\n        } catch (error) {\n            setError(true);\n            toast.error('Please, try to reload this page');\n        } finally {\n          setIsLoading(false);\n        }\n      };\n      searchCast();\n    }, [movieId]);\n\n\n    return (\n      <>\n        {isLoading && <Loader />}\n            {cast && cast.length === 0 && <p>There are no any information</p>}\n            {!error && cast.map(({ name, character, profile_path, id }) => (\n                <li key={id}>\n                  <img\n                    src={`https://image.tmdb.org/t/p/w500/${profile_path}`}\n                    width={150}\n                    alt={name}\n                  />\n                  <p>\n                    <b>{name}</b>\n                  </p>\n                  <p>\n                    {character}\n                  </p>\n                </li>\n            ))}\n      </>\n    );\n}"],"names":["axios","KEY","getTrendingMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","responce","_context","prev","next","concat","sent","abrupt","data","stop","apply","arguments","findMoviesByInput","_ref2","_callee2","input","response","_context2","results","_x","getMoviesDetails","_ref3","_callee3","movieId","_context3","_x2","getMovieCast","_ref4","_callee4","_context4","cast","_x3","getMovieReviews","_ref5","_callee5","_context5","_x4","Cast","_useState","useState","_useState2","_slicedToArray","setCast","_useState3","_useState4","error","setError","_useState5","_useState6","isLoading","setIsLoading","useParams","useEffect","searchCast","console","log","t0","toast","finish","_jsxs","_Fragment","children","_jsx","Loader","length","map","name","character","profile_path","id","src","width","alt"],"sourceRoot":""}