{"version":3,"file":"static/js/534.ffd9f69e.chunk.js","mappings":"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","sources":["api.js","components/PopularMovies/PopularMovies.styled.js","components/PopularMovies/PopularMovies.js","components/Searchbar/Searchbar.styled.js","components/Searchbar/Searchbar.js","pages/MoviesPage.js"],"sourcesContent":["import axios from 'axios';\nconst KEY = '472a7d35f0d46df70840d9ca53a79985';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.params = {\n  api_key: KEY,\n  language: 'en-US',\n  include_adult: false,\n};\n\nexport const getTrendingMovies = async () => {\n  const responce = await axios.get(`trending/movie/day`);\n  return responce.data;\n};\n\nexport const findMoviesByInput = async input => {\n  const response = await axios.get(`search/movie?query=${input}&page=1`);\n  return response.data.results;\n};\n\nexport const getMoviesDetails = async movieId => {\n  const response = await axios.get(`movie/${movieId}`);\n  return response.data;\n};\n\nexport const getMovieAbout = async (movieId, detailsKind) => {\n  const response = await axios.get(`movie/${movieId}/${detailsKind}`);\n  return response.data;\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n  justify-content: center;\n  font-size: 18px;\n`;\n\nexport const Movie = styled(Link)`\n  display: flex;\n  flex-direction: column;\n  border: 3px solid orange;\n  gap: 8px;\n  text-decoration: none;\n  max-width: 250px;\n  color: black;\n`;\n","import { useLocation } from 'react-router-dom';\nimport { List, Movie } from './PopularMovies.styled';\n\nconst defaultImg =\n  'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n\nexport const PopularMovies = ({ data }) => {\n  const location = useLocation();\n  return (\n    <List>\n      {data.map(({ id, title, poster_path }) => (\n        <li key={id}>\n          <Movie to={`/movies/${id}`} state={{ from: location }}>\n            {title}\n            <img\n              src={\n                poster_path\n                  ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n                  : defaultImg\n              }\n              width={250}\n              alt=\"poster\"\n            />\n          </Movie>\n        </li>\n      ))}\n    </List>\n  );\n};\n","import { Field as Input, Form as FormWrapper } from 'formik';\nimport styled from 'styled-components';\n\nexport const Form = styled(FormWrapper)`\n  width: 100%;\n  background-color: blue;\n  padding: 12px;\n  display: flex;\n  justify-content: center;\n  margin-bottom: 15px;\n`;\n\nexport const Wrapper = styled.div`\n  position: relative;\n`;\n\nexport const Field = styled(Input)`\n  height: 30px;\n`;\n\nexport const FormButton = styled.button`\n  height: 30px;\n  cursor: pointer;\n`;\n","import { Formik } from 'formik';\nimport { Field, Form, FormButton, Wrapper } from './Searchbar.styled';\n\nexport const Searchbar = ({ onSubmit }) => {\n  return (\n    <div>\n      <Formik\n        initialValues={{\n          search: '',\n        }}\n        onSubmit={values => {\n          onSubmit(values.search);\n        }}\n      >\n        <Form>\n          <Wrapper>\n            <Field\n              id=\"search\"\n              name=\"search\"\n            />\n            <FormButton type=\"submit\">\n              Search\n            </FormButton>\n          </Wrapper>\n        </Form>\n      </Formik>\n    </div>\n  );\n};\n","import { findMoviesByInput } from 'api';\nimport { Loader } from 'components/Loader';\nimport { PopularMovies } from 'components/PopularMovies/PopularMovies';\nimport { Searchbar } from 'components/Searchbar/Searchbar';\nimport { useEffect, useState } from 'react';\nimport toast from 'react-hot-toast';\nimport { useSearchParams } from 'react-router-dom';\n\nexport default function MoviesPage() {\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const [params, setParams] = useSearchParams();\n  const queryToSearch = params.get('query') ?? '';\n\n  const updateSearchParam = newQuery => {\n    params.set('query', newQuery);\n    setParams(params);\n  };\n\n  useEffect(() => {\n    const findMovie = async () => {\n      try {\n        setIsLoading(true);\n        setError(false);\n        const data = await findMoviesByInput(queryToSearch);\n        setMovies(data);\n      } catch (error) {\n        setError(true);\n        toast.error('Please, try to reload this page');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    findMovie();\n  }, [queryToSearch]);\n\n  const handleSearch = input => {\n    updateSearchParam(input);\n  };\n\n  return (\n    <>\n      <Searchbar onSubmit={handleSearch} />\n      {isLoading && <Loader />}\n      {movies.length > 0 && !error && <PopularMovies data={movies} />}\n    </>\n  );\n}\n"],"names":["axios","api_key","language","include_adult","getTrendingMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","responce","_context","prev","next","sent","abrupt","data","stop","apply","arguments","findMoviesByInput","_ref2","_callee2","input","response","_context2","concat","results","_x","getMoviesDetails","_ref3","_callee3","movieId","_context3","_x2","getMovieAbout","_ref4","_callee4","detailsKind","_context4","_x3","_x4","List","styled","_templateObject","_taggedTemplateLiteral","Movie","Link","_templateObject2","PopularMovies","location","useLocation","_jsx","children","map","id","title","poster_path","_jsxs","to","state","from","src","width","alt","Form","FormWrapper","Wrapper","Field","Input","_templateObject3","FormButton","_templateObject4","Searchbar","onSubmit","Formik","initialValues","search","values","name","type","MoviesPage","_params$get","_useState","useState","_useState2","_slicedToArray","movies","setMovies","_useState3","_useState4","error","setError","_useState5","_useState6","isLoading","setIsLoading","_useSearchParams","useSearchParams","_useSearchParams2","params","setParams","queryToSearch","get","useEffect","findMovie","t0","toast","finish","_Fragment","newQuery","set","Loader","length"],"sourceRoot":""}