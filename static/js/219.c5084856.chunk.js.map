{"version":3,"file":"static/js/219.c5084856.chunk.js","mappings":"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","sources":["api.js","components/Cast/Cast.styled.js","components/Cast/Cast.js"],"sourcesContent":["import axios from 'axios';\nconst KEY = '472a7d35f0d46df70840d9ca53a79985';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.params = {\n  api_key: KEY,\n  language: 'en-US',\n  include_adult: false,\n};\n\nexport const getTrendingMovies = async () => {\n  const responce = await axios.get(`trending/movie/day`);\n  return responce.data;\n};\n\nexport const findMoviesByInput = async input => {\n  const response = await axios.get(`search/movie?query=${input}&page=1`);\n  return response.data.results;\n};\n\nexport const getMoviesDetails = async movieId => {\n  const response = await axios.get(`movie/${movieId}`);\n  return response.data;\n};\n\nexport const getMovieAbout = async (movieId, detailsKind) => {\n  const response = await axios.get(`movie/${movieId}/${detailsKind}`);\n  return response.data;\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\ndisplay: flex;\nflex-wrap: wrap;\ngap: 12px;\njustify-content: center;\nmargin-top: 20px;\n`;\n\nexport const Card = styled.li`\nwidth: 150px;\nborder: 2px solid blue;\ntext-align: center;\ndisplay: flex;\nflex-direction: column;\n`;","import { getMovieAbout } from 'api';\nimport { Loader } from 'components/Loader';\nimport { useEffect, useState } from 'react';\nimport toast from 'react-hot-toast';\nimport { useParams } from 'react-router-dom';\nimport { Card, List } from './Cast.styled';\n\nconst defaultImg =\n  'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n\nexport default function Cast() {\n  const [cast, setCast] = useState(null);\n  const [error, setError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const { movieId } = useParams();\n  useEffect(() => {\n    if (!movieId) return;\n    const searchCast = async () => {\n      try {\n        setIsLoading(true);\n        setError(false);\n        const data = await getMovieAbout(movieId, 'credits');\n        setCast(data.cast);\n      } catch (error) {\n        setError(true);\n        toast.error('Please, try to reload this page');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    searchCast();\n  }, [movieId]);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {error && <p>Something went wrong. Please, try to reload the page</p>}\n      {cast && cast.length === 0 && <p>There are no any information</p>}\n      {cast && (\n        <List>\n          {cast.map(({ name, character, profile_path, id }) => (\n            <Card key={id}>\n              <img\n                src={\n                  profile_path\n                    ? `https://image.tmdb.org/t/p/w500/${profile_path}`\n                    : defaultImg\n                }\n                width={150}\n                alt={name}\n              />\n              <p>\n                <b>{name}</b>\n              </p>\n              <p>{character}</p>\n            </Card>\n          ))}\n        </List>\n      )}\n    </>\n  );\n}\n"],"names":["axios","api_key","language","include_adult","getTrendingMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","responce","_context","prev","next","sent","abrupt","data","stop","apply","arguments","findMoviesByInput","_ref2","_callee2","input","response","_context2","concat","results","_x","getMoviesDetails","_ref3","_callee3","movieId","_context3","_x2","getMovieAbout","_ref4","_callee4","detailsKind","_context4","_x3","_x4","List","styled","_templateObject","_taggedTemplateLiteral","Card","_templateObject2","Cast","_useState","useState","_useState2","_slicedToArray","cast","setCast","_useState3","_useState4","error","setError","_useState5","_useState6","isLoading","setIsLoading","useParams","useEffect","searchCast","t0","toast","finish","_jsxs","_Fragment","children","_jsx","Loader","length","map","name","character","profile_path","id","src","width","alt"],"sourceRoot":""}